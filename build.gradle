buildscript {
  repositories {
    mavenCentral()
  }
  dependencies {
    classpath 'org.jetbrains.kotlin:kotlin-gradle-plugin:1.0.0-beta-1103'
  }
}

apply plugin: 'kotlin'
apply plugin: 'application'

mainClassName = 'main.MainKt'

defaultTasks 'run'

repositories {
  mavenCentral()
}

dependencies {
  compile 'org.jetbrains.kotlin:kotlin-reflect:1.0.0-beta-1103'
  compile 'org.jetbrains.kotlin:kotlin-stdlib:1.0.0-beta-1103'
  compile 'io.reactivex:rxjava:1.0.15'
    compile 'io.reactivex:rxkotlin:0.24.100'
  compile 'org.seleniumhq.selenium:selenium-java:2.48.2'
}

task wrapper(type: Wrapper) {
  gradleVersion = "2.8"
}

/*
task downloadChromeDriverZip(type: Download) {
  if (OperatingSystem.current().isMacOsX()) {
    src 'http://chromedriver.storage.googleapis.com/2.19/chromedriver_mac32.zip'
  }
  else if (OperatingSystem.current().isLinux()) {
    src 'http://chromedriver.storage.googleapis.com/2.19/chromedriver_linux64.zip'
  }
  else {
    src 'http://chromedriver.storage.googleapis.com/2.19/chromedriver_win32.zip'
  }
  dest new File(buildDir, 'chromedriver.zip')
  quiet false
  overwrite true
  onlyIfNewer true
  compress false
  println "Download Chrome driver: " + src + " to " + dest
}

task downloadAndUnzipChromeDriver(dependsOn: downloadChromeDriverZip, type: Copy) {
    println "Unzip Chrome driver: " + downloadChromeDriverZip.dest
    from zipTree(downloadChromeDriverZip.dest)
    into buildDir
}

task chrome(type: Test, dependsOn: downloadAndUnzipChromeDriver) {
    println 'Use Chrome driver: ' + buildDir + '/chromedriver'
    systemProperties['webdriver.chrome.driver'] = new File(buildDir, 'chromedriver')
}*/
